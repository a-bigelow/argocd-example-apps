---
apiVersion: v1
kind: Namespace
metadata:
  name: hello-kubernetes
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hello-kubernetes-eks-ha
  namespace: hello-kubernetes
  labels:
    app.kubernetes.io/name: hello-kubernetes
    app.kubernetes.io/instance: eks-ha
    app.kubernetes.io/version: "1.10"
---
apiVersion: v1
kind: Service
metadata:
  name: hello-kubernetes-eks-ha
  namespace: hello-kubernetes
  labels:
    app.kubernetes.io/name: hello-kubernetes
    app.kubernetes.io/instance: eks-ha
    app.kubernetes.io/version: "1.10"
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: hello-kubernetes
    app.kubernetes.io/instance: eks-ha
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-kubernetes-eks-ha
  namespace: hello-kubernetes
  labels:
    app.kubernetes.io/name: hello-kubernetes
    app.kubernetes.io/instance: eks-ha
    app.kubernetes.io/version: "1.10"
spec:
  replicas: 30
  selector:
    matchLabels:
      app.kubernetes.io/name: hello-kubernetes
      app.kubernetes.io/instance: eks-ha
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hello-kubernetes
        app.kubernetes.io/instance: eks-ha
    spec:
      serviceAccountName: hello-kubernetes-eks-ha
      # volumes:
      # - name: secrets-store-inline
      #   csi:
      #     driver: secrets-store.csi.k8s.io
      #     readOnly: true
      #     volumeAttributes:
      #       secretProviderClass: <CHANGE-ME>
      containers:
        - name: hello-kubernetes
          image: "paulbouwer/hello-kubernetes:1.10"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          env:
          # - name: MESSAGE
          #   valueFrom:
          #     secretKeyRef:
          #       name: secret-message
          #       key: message
          - name: MESSAGE
            value: "Hello, ArgoCD!"
          - name: HANDLER_PATH_PREFIX
            value: ""
          - name: RENDER_PATH_PREFIX
            value: ""
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: KUBERNETES_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: KUBERNETES_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: CONTAINER_IMAGE
            value: "paulbouwer/hello-kubernetes:1.10"
          # volumeMounts:
          #   - name: secrets-store-inline
          #     mountPath: /mnt/secrets-store
          #     readOnly: true
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hello-kubernetes-ingress
  namespace: hello-kubernetes
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
spec:
  rules:
  - http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: hello-kubernetes-eks-ha
              port:
                name: http
